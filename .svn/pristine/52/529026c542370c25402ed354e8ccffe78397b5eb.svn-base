class Users::RegistrationsController < Devise::RegistrationsController
 before_filter :configure_sign_up_params, only: [:create]
 before_filter :configure_account_update_params, only: [:update]

  before_filter :configure_permitted_parameters
 
  #protected

  def after_sign_up_path_for(resource)
    
    logger.debug "\n RegistrationsController : after_sign_up_path_for resource #{resource}  \n"
    
    if params[:who] == "mgr"
      # School Admin Setup
         
      #"/schools/new?wizard_step=school_info&signup=yes&schid=" << @school.id
      new_school_path(:wizard_step => 'school_info', :signup => 'yes')
    else
      
      new_district_path(:wizard_step => 'district_info', :signup => 'yes')
    end
  end
  
  

  #GET /resource/sign_up
  def new
    super
  end
  
  def new_specialist
    new
  end

  def create
    logger.debug "create params inspect is :  #{params.all}"
    #super
    
  end
  # POST /resource
  # def create
  #   super
  # end

  # GET /resource/edit
  # def edit
  #   super
  # end

  # PUT /resource
  # def update
  #   super
  # end

  # DELETE /resource
  # def destroy
  #   super
  # end

  # GET /resource/cancel
  # Forces the session data which is usually expired after sign
  # in to be expired now. This is useful if the user wants to
  # cancel oauth signing in/up in the middle of the process,
  # removing all OAuth session data.
  # def cancel
  #   super
  # end

  # protected

  # You can put the params you want to permit in the empty array.
  # def configure_sign_up_params
  #   devise_parameter_sanitizer.for(:sign_up) << :attribute
  # end

  # You can put the params you want to permit in the empty array.
  # def configure_account_update_params
  #   devise_parameter_sanitizer.for(:account_update) << :attribute
  # end

  # The path used after sign up.
  # def after_sign_up_path_for(resource)
  #   super(resource)
  # end

  # The path used after sign up for inactive accounts.
  # def after_inactive_sign_up_path_for(resource)
  #   super(resource)
  # end
end
